[{"E:\\Learning\\React\\react-apps\\covid19-app\\src\\index.tsx":"1","E:\\Learning\\React\\react-apps\\covid19-app\\src\\App.tsx":"2","E:\\Learning\\React\\react-apps\\covid19-app\\src\\service\\service.ts":"3","E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\Country\\Country.tsx":"4","E:\\Learning\\React\\react-apps\\covid19-app\\src\\redux\\index.js":"5","E:\\Learning\\React\\react-apps\\covid19-app\\src\\redux\\reducer.js":"6","E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\Chart\\Chart.js":"7","E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\CountriesSelect\\CountriesSelect.tsx":"8","E:\\Learning\\React\\react-apps\\covid19-app\\src\\redux\\actions.js":"9","E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\Login\\Login.js":"10","E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\Dashboard\\Dashboard.tsx":"11","E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\Preloader\\Preloader.js":"12","E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\Error\\ErrorBoundary.tsx":"13","E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\Error\\ErrorIndicator.js":"14"},{"size":279,"mtime":1611399978703,"results":"15","hashOfConfig":"16"},{"size":1144,"mtime":1611505654458,"results":"17","hashOfConfig":"16"},{"size":2295,"mtime":1611505706333,"results":"18","hashOfConfig":"16"},{"size":1346,"mtime":1611504961408,"results":"19","hashOfConfig":"16"},{"size":130,"mtime":1611421416800,"results":"20","hashOfConfig":"16"},{"size":657,"mtime":1611497770191,"results":"21","hashOfConfig":"16"},{"size":2634,"mtime":1611487459675,"results":"22","hashOfConfig":"16"},{"size":1859,"mtime":1611505754916,"results":"23","hashOfConfig":"16"},{"size":805,"mtime":1611439116392,"results":"24","hashOfConfig":"16"},{"size":632,"mtime":1611505769147,"results":"25","hashOfConfig":"16"},{"size":2371,"mtime":1611505855873,"results":"26","hashOfConfig":"16"},{"size":435,"mtime":1611491476103,"results":"27","hashOfConfig":"16"},{"size":517,"mtime":1611497442899,"results":"28","hashOfConfig":"16"},{"size":179,"mtime":1611497672060,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"140buyc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"E:\\Learning\\React\\react-apps\\covid19-app\\src\\index.tsx",[],["63","64"],"E:\\Learning\\React\\react-apps\\covid19-app\\src\\App.tsx",[],"E:\\Learning\\React\\react-apps\\covid19-app\\src\\service\\service.ts",[],"E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\Country\\Country.tsx",["65"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCountryStatsFromDay } from \"../../service/service\";\r\nimport { setCountryStats } from \"../../redux/actions\";\r\nimport { ChartLine } from \"../Chart/Chart\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nimport \"./Country.scss\";\r\n\r\ninterface RootState {\r\n  countryData: any;\r\n  countryStats: any;\r\n}\r\nconst pathToBack: string = \"https://dellyn.github.io/covid19/dashboard\";\r\n\r\nconst Country = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const localStorageData: string = localStorage.getItem(\"countryData\")!;\r\n  const countryData =\r\n    useSelector((state: RootState) => state.countryData) ||\r\n    JSON.parse(localStorageData);\r\n\r\n  useEffect(() => {\r\n    const countryName: string = countryData.Slug;\r\n\r\n    getCountryStatsFromDay(countryName).then((data) => {\r\n      dispatch(setCountryStats(data));\r\n    });\r\n  }, [countryData]);\r\n\r\n  if (!countryData) return <Preloader />;\r\n  const { Country: countryName } = countryData;\r\n\r\n  return (\r\n    <div className=\"country\">\r\n      <div className=\"container\">\r\n        <h1 className=\"country-title\">{countryName}</h1>\r\n        <a href={pathToBack} className=\"link\">\r\n          Back\r\n        </a>\r\n        <ChartLine />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","E:\\Learning\\React\\react-apps\\covid19-app\\src\\redux\\index.js",[],["66","67"],"E:\\Learning\\React\\react-apps\\covid19-app\\src\\redux\\reducer.js",[],"E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\Chart\\Chart.js",[],"E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\CountriesSelect\\CountriesSelect.tsx",["68"],"import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCountries } from \"../../service/service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setCountryData, setCountriesData } from \"../../redux/actions\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nimport \"./CountriesSelect.scss\";\r\n\r\ntype CountriesDataType = {\r\n  Country: string;\r\n};\r\ninterface RootState {\r\n  countriesData: any;\r\n}\r\n\r\nconst CountriesSelect = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n  const countriesData = useSelector((state: RootState) => state.countriesData);\r\n\r\n  useEffect(() => {\r\n    getCountries().then((data: CountriesDataType[]) => {\r\n      dispatch(setCountriesData(data));\r\n    });\r\n  }, []);\r\n\r\n  const openCountry = (data: any) => {\r\n    dispatch(setCountryData(data.data));\r\n    history.push(`/covid19/country/${data.value}`);\r\n  };\r\n\r\n  const customStyles = {\r\n    singleValue: () => {\r\n      const color = \"#fff\";\r\n      return { color };\r\n    },\r\n  };\r\n\r\n  if (!countriesData) return <Preloader />;\r\n\r\n  const listCountries = countriesData.map((country: CountriesDataType) => {\r\n    const { Country } = country;\r\n\r\n    return { value: Country, label: Country, data: country };\r\n  });\r\n\r\n  return (\r\n    <div className=\"countries-select\">\r\n      <Select\r\n        className=\"react-select\"\r\n        styles={customStyles}\r\n        value={{ value: \"Country\", label: \"Country\" }}\r\n        options={listCountries}\r\n        theme={(theme) => ({\r\n          ...theme,\r\n          borderRadius: 0,\r\n          colors: {\r\n            ...theme.colors,\r\n            primary25: \"rgb(29, 32, 41);\",\r\n          },\r\n        })}\r\n        onChange={(data) => openCountry(data)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountriesSelect;\r\n","E:\\Learning\\React\\react-apps\\covid19-app\\src\\redux\\actions.js",[],"E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\Login\\Login.js",[],"E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\Dashboard\\Dashboard.tsx",["69"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSummary, getCountries } from \"../../service/service\";\r\nimport { setGlobalData, setCountriesData } from \"../../redux/actions\";\r\nimport { ChartPie } from \"../Chart/Chart\";\r\nimport CountriesSelect from \"../CountriesSelect/CountriesSelect\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport ErrorIndicator from \"../Error/ErrorIndicator\";\r\nimport ErrorBoundary from \"../Error/ErrorBoundary\";\r\n\r\nimport \"./Dashboard.scss\";\r\n\r\ntype GlobalDataType = {\r\n  count: number;\r\n  title: string;\r\n};\r\ninterface RootState {\r\n  globalData: GlobalDataType[];\r\n}\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const [error, setError] = useState<boolean>(false);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  const globalData = useSelector((state: RootState) => state.globalData);\r\n\r\n  useEffect(() => {\r\n    const syncExecution = async () => {\r\n      await getSummary()\r\n        .then((data: any) => {\r\n          dispatch(setGlobalData(data));\r\n        })\r\n        .catch(() => {\r\n          setError(true);\r\n        });\r\n\r\n      await getCountries()\r\n        .then((data: any) => {\r\n          dispatch(setCountriesData(data));\r\n        })\r\n        .catch(() => {\r\n          setError(true);\r\n        });\r\n\r\n      setLoading(false);\r\n    };\r\n    syncExecution();\r\n  }, []);\r\n\r\n  if (loading && !error) return <Preloader />;\r\n  else if (error) return <ErrorIndicator />;\r\n\r\n  const gridList = globalData.map(({ title, count }: GlobalDataType) => {\r\n    return (\r\n      <div className=\"grid-square\" key={title}>\r\n        <div className=\"grid-square-content\">\r\n          <p className=\"title\">{title}</p>\r\n          <p className=\"count\">{count}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"container\">\r\n        <h1 className=\"logo\">Dashboard</h1>\r\n        <div className=\"table\">{gridList}</div>\r\n        <div className=\"dashboard-flex\">\r\n          <ErrorBoundary>\r\n            <CountriesSelect />\r\n          </ErrorBoundary>\r\n          <div className=\"word-grid grid\">\r\n            <ErrorBoundary>\r\n              <ChartPie />\r\n            </ErrorBoundary>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\Preloader\\Preloader.js",[],"E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\Error\\ErrorBoundary.tsx",[],"E:\\Learning\\React\\react-apps\\covid19-app\\src\\components\\Error\\ErrorIndicator.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":30,"column":6,"nodeType":"76","endLine":30,"endColumn":19,"suggestions":"77"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":29,"column":6,"nodeType":"76","endLine":29,"endColumn":8,"suggestions":"78"},{"ruleId":"74","severity":1,"message":"75","line":49,"column":6,"nodeType":"76","endLine":49,"endColumn":8,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["82"],["83"],["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"87","fix":"89"},"Update the dependencies array to be: [countryData, dispatch]",{"range":"90","text":"91"},"Update the dependencies array to be: [dispatch]",{"range":"92","text":"93"},{"range":"94","text":"93"},[933,946],"[countryData, dispatch]",[817,819],"[dispatch]",[1413,1415]]